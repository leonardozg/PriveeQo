const fs = require('fs');

// Read the original UTF8 converted file
const csvContent = fs.readFileSync('attached_assets/data_1754835209226_utf8.csv', 'utf8');

console.log('ðŸ”§ Corrigiendo caracteres especÃ­ficos del archivo original...');

// Apply targeted corrections only to fix encoding issues
let fixedContent = csvContent
  // Fix Ã± characters
  .replace(/acompaados/g, 'acompaÃ±ados')
  .replace(/diseo/g, 'diseÃ±o')
  .replace(/Bistek/g, 'Bistec')
  
  // Fix specific accented characters
  .replace(/Caf americano/g, 'CafÃ© americano')
  .replace(/([^a-zA-Z])T verde/g, '$1TÃ© verde')
  .replace(/Servicio de Caf/g, 'Servicio de CafÃ©')
  .replace(/([^a-zA-Z])T,/g, '$1TÃ©,')
  
  // Fix specific words
  .replace(/mantelera/g, 'mantelerÃ­a')
  .replace(/cristalera/g, 'cristalerÃ­a')
  .replace(/Decoracin/g, 'DecoraciÃ³n')
  .replace(/plaqu/g, 'plaquÃ©')
  .replace(/Capitan/g, 'CapitÃ¡n')
  .replace(/([^a-zA-Z])men([^a-zA-Z])/g, '$1menÃº$2')
  
  // Fix "Menu" to "MenÃº" only in specific contexts (names and categories)
  .replace(/^([^,]+) Menu,/gm, '$1 MenÃº,')
  .replace(/,Menu,/g, ',MenÃº,');

// Write the corrected content  
fs.writeFileSync('attached_assets/data_final_corrected.csv', fixedContent, 'utf8');

// Count lines
const lines = fixedContent.split('\n').filter(line => line.trim());
console.log(`âœ… Base de datos corregida: ${lines.length - 1} productos`);
console.log('ðŸ“‚ Archivo: data_final_corrected.csv');

// Show sample of key corrections
console.log('\nðŸ”¤ Verificando correcciones:');
const sampleLines = fixedContent.split('\n').slice(1, 4);
sampleLines.forEach((line, i) => {
  const name = line.split(',')[0];
  const hasSpanish = name.includes('Ã±') || name.includes('Ã¡') || name.includes('Ã©') || name.includes('Ã­') || name.includes('Ã³') || name.includes('Ãº');
  console.log(`  ${hasSpanish ? 'âœ“' : 'â€¢'} ${name}`);
});